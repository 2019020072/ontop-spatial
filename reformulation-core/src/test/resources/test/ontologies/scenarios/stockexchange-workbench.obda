<?xml version="1.0" encoding="ISO-8859-1"?>
<OBDA version="1.0" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
    xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
    xmlns:owl="http://www.w3.org/2002/07/owl#"
    xmlns="http://www.owl-ontologies.com/Ontology1207768242.owl#"
  xml:base="http://www.owl-ontologies.com/Ontology1207768242.owl#">
    <mappings
        bodyclass="class inf.unibz.it.obda.api.mapping.RDBMSSQLQuery"
        headclass="class inf.unibz.it.obda.api.domain.ucq.ConjunctiveQuery" sourceuri="RandBStockExchange">
        <mapping id="mapping-addresses">
            <CQ string="Address(getAddressObj($id)), addressID(getAddressObj($id),$id), inStreet(getAddressObj($id),$street), hasNumber(getAddressObj($id),$number), inCity(getAddressObj($id),$city), inState(getAddressObj($id),$state), inCountry(getAddressObj($id),$country)"/>
            <SQLQuery string="select id, street, number, city, state, country from address"/>
        </mapping>
        <mapping id="mapping-brokers">
            <CQ string="StockBroker(getPersonObj($id)), firstName(getPersonObj($id),$name), lastName(getPersonObj($id),$lastname), dateOfBirth(getPersonObj($id),$dateofbirth), ssn(getPersonObj($id),$ssn)"/>
            <SQLQuery string="select id, name, lastname, dateofbirth, ssn from broker"/>
        </mapping>
        <mapping id="mapping-broker-address">
            <CQ string="hasAddress(getPersonObj($id),getAddressObj($addressid))"/>
            <SQLQuery string="select id, addressid from broker"/>
        </mapping>
        <mapping id="mapping-investors">
            <CQ string="Investor(getPersonObj($id)), firstName(getPersonObj($id),$name), lastName(getPersonObj($id),$lastname), dateOfBirth(getPersonObj($id),$dateofbirth), ssn(getPersonObj($id),$ssn)"/>
            <SQLQuery string="select id, name, lastname, dateofbirth, ssn from client"/>
        </mapping>
        <mapping id="mapping-investor-address">
            <CQ string="hasAddress(getPersonObj($id),getAddressObj($addressid))"/>
            <SQLQuery string="select id, name, lastname, addressid from client"/>
        </mapping>
        <mapping id="mapping-companies">
            <CQ string="Company(getCompanyObj($id)), companyName(getCompanyObj($id),$name), marketShares(getCompanyObj($id),$marketshares), netWorth(getCompanyObj($id),$networth)"/>
            <SQLQuery string="select id, name, marketshares, networth from company"/>
        </mapping>
        <mapping id="mapping-company-addresses">
            <CQ string="hasAddress(getCompanyObj($id),getAddressObj($addressid))"/>
            <SQLQuery string="select id, addressid from company"/>
        </mapping>
        <mapping id="mapping-stocks">
            <CQ string="Stock(getStockObj($id)), financialInstrumentID(getStockObj($id),$id), amountOfShares(getStockObj($id),$numberofshares), typeOfShares(getStockObj($id),$sharetype)"/>
            <SQLQuery string="select id, numberofshares, sharetype from stockinformation"/>
        </mapping>
        <mapping id="mapping-stockbooks">
            <CQ string="StockExchangeList(getStockBookObj($date)), listdate(getStockBookObj($date),$date)"/>
            <SQLQuery string="select distinct date from stockbooklist "/>
        </mapping>
        <mapping id="mapping-tradesOnBehalfOf-physical">
            <CQ string="tradesOnBehalfOf(getPersonObj($brokerid),getPersonObj($clientid))"/>
            <SQLQuery string="select brokerid, clientid from brokerworksfor where clientid IS NOT NULL"/>
        </mapping>
        <mapping id="mapping-tradesOnBehalfOf-legal">
            <CQ string="tradesOnBehalfOf(getPersonObj($brokerid),getCompanyObj($companyid))"/>
            <SQLQuery string="select brokerid, companyid from brokerworksfor where companyid IS NOT NULL"/>
        </mapping>
        <mapping id="mapping-transactions">
            <CQ string="Transaction(getTransactionObj($id)), transactionID(getTransactionObj($id),$id), transactionDate(getTransactionObj($id),$date)"/>
            <SQLQuery string="select id, date from transaction"/>
        </mapping>
        <mapping id="mapping-transaction-roles-persons">
            <CQ string="isExecutedBy(getTransactionObj($id),getPersonObj($brokerid)), isExecutedFor(getTransactionObj($id),getPersonObj($forclientid)), involvesInstrument(getTransactionObj($id),getStockObj($stockid))"/>
            <SQLQuery string="select id, brokerid, forclientid, stockid from transaction where forclientid IS NOT NULL"/>
        </mapping>
        <mapping id="mapping-transaction-roles-companies">
            <CQ string="isExecutedBy(getTransactionObj($id),getPersonObj($brokerid)), isExecutedFor(getTransactionObj($id),getCompanyObj($forcompanyid)), involvesInstrument(getTransactionObj($id),getStockObj($stockid))"/>
            <SQLQuery string="select id, brokerid, forcompanyid, stockid from transaction where forcompanyid IS NOT NULL"/>
        </mapping>
        <mapping id="mapping-stock-company">
            <CQ string="belongsToCompany(getStockObj($id),getCompanyObj($companyid))"/>
            <SQLQuery string="select id, companyid from stockinformation"/>
        </mapping>
        <mapping id="mapping-stock-listedin">
            <CQ string="listsStock(getStockBookObj($date),getStockObj($stockid))"/>
            <SQLQuery string="select date, stockid from stockbooklist"/>
        </mapping>
        <mapping id="mapping-dealer">
            <CQ string="Dealer(getPersonObj($clientid))"/>
            <SQLQuery string="select clientid from broker,client,brokerworksfor where client.id = broker.id and brokerid=broker.id and client.id=clientid"/>
        </mapping>
        <mapping id="mapping-offers">
            <CQ string="Offer(getTransactionObj($id))"/>
            <SQLQuery string="SELECT id FROM transaction WHERE type=true"/>
        </mapping>
    </mappings>
    <dataSource databaseDriver="org.postgresql.Driver"
        databaseName="stockclient1" databasePassword="stock-09"
        databaseURL="jdbc:postgresql://localhost/"
        databaseUsername="stock" name="RandBStockExchange" ontologyURI="http://www.owl-ontologies.com/Ontology1207768242.owl"/>
    <SavedQueries>
        <QueryGroup id="Simple queries">
            <Query id="Addresses" text="SELECT * WHERE {      $x rdf:type :Address . &#xa;&#x9;&#x9;$x :addressID $id. &#xa;&#x9;&#x9;$x :inStreet $street. &#xa;&#x9;&#x9;$x :inCity $city. &#xa;&#x9;&#x9;$x :inCountry $country. &#xa;&#x9;&#x9;$x :inState $state. &#xa;&#x9;&#x9;$x :hasNumber $number.&#xa;} "/>
            <Query id="Persons-Addresses" text="SELECT * WHERE { $x rdf:type :Person. &#xa;&#x9;&#x9;$x :firstName $fn. &#xa;&#x9;&#x9;$x :lastName $ln. &#xa;&#x9;&#x9;$x :hasAddress $address. &#xa;&#x9;&#x9;$address :inStreet $street. &#xa;&#x9;&#x9;$address :inCity $city. &#xa;&#x9;&#x9;$address :inCountry $country. } "/>
            <Query id="StockTraders" text="SELECT $fn $ln $securitynumber WHERE {&#xa;&#x9;&#x9;$trader rdf:type :StockTrader. &#xa;&#x9;&#x9;$trader :firstName $fn. &#xa;&#x9;&#x9;$trader :lastName $ln. &#xa;&#x9;&#x9;$trader :ssn $securitynumber&#xa; } "/>
        </QueryGroup>
        <QueryGroup id="CQs">
            <Query id="Brokers-Workfor-Themselfs" text="SELECT $fname $ln $securitynum WHERE { &#xa;&#x9;&#x9;$broker rdf:type :StockBroker. &#xa;&#x9;&#x9;$broker :tradesOnBehalfOf $broker. &#xa;&#x9;&#x9;$broker :firstName $fname. &#xa;&#x9;&#x9;$broker :lastName $ln. &#xa;&#x9;&#x9;$broker :ssn $securitynum &#xa;} "/>
            <Query id="Brokers-Workfor-Physical" text="SELECT $fname $ln $securitynum WHERE { &#xa;&#x9;$member rdf:type :StockExchangeMember. &#xa;&#x9;$member :tradesOnBehalfOf $client1. &#xa;&#x9;$client1 rdf:type :PhysicalPerson. &#xa;&#x9;$member :firstName $fname. &#xa;&#x9;$member :lastName $ln. &#xa;&#x9;$member :ssn $securitynum&#xa; } "/>
            <Query id="Brokers-Workfor-Legal" text="SELECT $fname $ln $securitynum WHERE { &#xa;&#x9;$member rdf:type :StockExchangeMember. &#xa;&#x9;$member :tradesOnBehalfOf $client1. &#xa;&#x9;$client1 rdf:type :LegalPerson. &#xa;&#x9;$member :firstName $fname. &#xa;&#x9;$member :lastName $ln. &#xa;&#x9;$member :ssn $securitynum&#xa; } "/>
            <Query id="Brokers-Workfor-Legal-Phisical" text="SELECT $fname $ln $securitynum WHERE { &#xa;&#x9;$member rdf:type :StockExchangeMember. &#xa;&#x9;$member :tradesOnBehalfOf $client1. &#xa;&#x9;$client1 rdf:type :PhysicalPerson. &#xa;&#x9;$member :tradesOnBehalfOf $client2. &#xa;&#x9;$client2 rdf:type :LegalPerson. &#xa;&#x9;$member :firstName $fname. &#xa;&#x9;$member :lastName $ln. &#xa;&#x9;$member :ssn $securitynum &#xa;}&#xa;"/>
            <Query id="Transactions-FinantialInstrument" text="SELECT $x WHERE {      $x rdf:type :Transaction . &#xa;&#x9;&#x9;$x :involvesInstrument $inst. &#xa;&#x9;&#x9;$inst rdf:type :FinantialInstrument.&#xa;} "/>
            <Query id="transaction-stock-type" text="SELECT $x $inst $type WHERE {      $x rdf:type :Transaction . &#xa;&#x9;&#x9;$x :involvesInstrument $inst. &#xa;&#x9;&#x9;$inst rdf:type :Stock.&#xa;&#x9;&#x9;$inst :typeOfShares $type.&#xa;} "/>
            <Query id="transaction-offer-stock" text="SELECT $x $inst $type WHERE {      $x rdf:type :Transaction . &#xa;&#x9;&#x9;$x rdf:type :Offer.&#xa;&#x9;&#x9;$x :involvesInstrument $inst. &#xa;&#x9;&#x9;$inst rdf:type :Stock.&#xa;&#x9;&#x9;$inst :typeOfShares $type.&#xa;} "/>
        </QueryGroup>
        <QueryGroup id="EQL">
            <Query id="Brokers-workfor-physicalonly" text="select table1.fn, table1.ln, table1.securityn from sparqltable (&#xa;&#x9;SELECT $member $fn $ln $securityn WHERE { &#xa;&#x9;&#x9;$member rdf:type :StockExchangeMember. &#xa;&#x9;&#x9;$member tradesOnBehalfOf $client1.&#x9;&#x9; &#xa;&#x9;&#x9;$client1 rdf:type :PhysicalPerson.&#xa;&#x9;&#x9;$member firstName $fn. &#xa;&#x9;&#x9;$member lastName $ln. &#xa;&#x9;&#x9;$member ssn $securityn })&#x9;&#x9;&#xa;&#x9;&#x9;&#x9;table1 where table1.member NOT IN &#xa;&#x9;&#x9;&#x9;(SELECT&#x9;table2.member2 from sparqltable (SELECT $member2 WHERE {&#x9;&#x9;&#x9;&#x9;&#x9;$member2 rdf:type :StockExchangeMember. &#xa;&#x9;&#x9;&#x9;&#x9;&#x9;$member2 tradesOnBehalfOf $client2. &#xa;&#x9;&#x9;&#x9;&#x9;&#x9;$client2 rdf:type :LegalPerson.&#x9;&#x9;&#xa;}) table2);"/>
            <Query id="Broker-workfor-physicalonly" text="SELECT table1.fn, table1.ln, table1.securityn FROM sparqltable (&#xa;&#x9;SELECT $member $fn $ln $securityn WHERE { &#xa;&#x9;&#x9;$member rdf:type :StockExchangeMember. &#xa;&#x9;&#x9;$member :tradesOnBehalfOf $client1.&#x9;&#x9; &#xa;&#x9;&#x9;$client1 rdf:type :PhysicalPerson.&#xa;&#x9;&#x9;$member :firstName $fn. &#xa;&#x9;&#x9;$member :lastName $ln. &#xa;&#x9;&#x9;$member :ssn $securityn &#xa;&#x9;&#x9;}&#xa;&#x9; ) table1 &#xa;WHERE table1.member NOT IN &#xa;&#x9;&#x9;(SELECT&#x9;table2.member2 FROM sparqltable &#xa;&#x9;&#x9;&#x9;(SELECT $member2 WHERE {&#x9;&#x9;&#x9;&#x9;&#x9;&#xa;&#x9;&#x9;&#x9;        $member2 rdf:type :StockExchangeMember. &#xa;&#x9;&#x9;&#x9;&#x9;&#x9;$member2 :tradesOnBehalfOf $client2. &#xa;&#x9;&#x9;&#x9;&#x9;&#x9;$client2 rdf:type :LegalPerson.&#x9;&#x9;&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xa;&#x9;&#x9;&#x9;) table2&#xa;&#x9;&#x9;)"/>
        </QueryGroup>
    </SavedQueries>
</OBDA>
