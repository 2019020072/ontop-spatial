<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE OBDA [
   <!ENTITY dc 'http://purl.org/dc/elements/1.1/'>
   <!ENTITY swrl 'http://www.w3.org/2003/11/swrl#'>
   <!ENTITY dctype 'http://purl.org/dc/dcmitype/Image'>
   <!ENTITY foaf 'http://xmlns.com/foaf/0.1/'>
   <!ENTITY swrlb 'http://www.w3.org/2003/11/swrlb#'>
   <!ENTITY dcterms 'http://purl.org/dc/terms/'>
]>
<OBDA version="1.0" xml:base="http://www.owl-ontologies.com/Ontology1207768242.owl#" xmlns="http://www.owl-ontologies.com/Ontology1207768242.owl#" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:dctype="http://purl.org/dc/dcmitype/Image" xmlns:foaf="http://xmlns.com/foaf/0.1/" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:swrl="http://www.w3.org/2003/11/swrl#" xmlns:swrlb="http://www.w3.org/2003/11/swrlb#" xmlns:xsd="http://www.w3.org/2001/XMLSchema#">
  <mappings body="class it.unibz.krdb.obda.model.impl.SQLQueryImpl" headclass="class it.unibz.krdb.obda.model.impl.CQIEImpl" sourceuri="kbdb_imdb">
        <mapping id="Actor">
            <CQ string="Actor(person($id))"/>
            <SQLQuery string="select name.id as id from name, cast_info where name.id = cast_info.person_id and cast_info.role_id = 1"/>
        </mapping>
        <mapping id="Movie">
            <CQ string="Movie(title($id)), hasTitle(title($id),$title), hasProductionYear(title($id),$prodyear)"/>
            <SQLQuery string="select title.id as id, title.title as title, title.production_year as prodyear from title where kind_id = 1"/>
        </mapping>
        <mapping id="Producer">
            <CQ string="Producer(person($id))"/>
            <SQLQuery string="select name.id as id from name, cast_info where cast_info.person_id = name.id and cast_info.role_id = 3"/>
        </mapping>
        <mapping id="Actress">
            <CQ string="Actress(person($id))"/>
            <SQLQuery string="select name.id as id from name, cast_info where name.id = cast_info.person_id and cast_info.role_id = 2"/>
        </mapping>
        <mapping id="TVSeries">
            <CQ string="TVSeries(title($id)), hasTitle(title($id),$title), hasProductionYear(title($id),$prodyear)"/>
            <SQLQuery string="select title.id as id, title.title as title, title.production_year as prodyear from title where kind_id = 2"/>
        </mapping>
        <mapping id="Writer">
            <CQ string="Writer(person($id))"/>
            <SQLQuery string="select name.id as id from name, cast_info where cast_info.person_id = name.id and cast_info.role_id = 4"/>
        </mapping>
        <mapping id="Director">
            <CQ string="Director(person($id))"/>
            <SQLQuery string="select name.id as id from name, cast_info where cast_info.person_id = name.id and cast_info.role_id = 8"/>
        </mapping>
        <mapping id="Editor">
            <CQ string="Editor(person($id))"/>
            <SQLQuery string="select name.id as id from name, cast_info where cast_info.person_id = name.id and cast_info.role_id = 9"/>
        </mapping>
        <mapping id="hasGenre">
            <CQ string="hasGenre(title($title_id),genre($genre))"/>
            <SQLQuery string="select title.id as title_id, movie_info.info as genre from title, movie_info where title.id = movie_info.movie_id and movie_info.info_type_id = 3"/>
        </mapping>
        <mapping id="hasPlot">
            <CQ string="hasPlot(title($title_id),plot($plot))"/>
            <SQLQuery string="select title.id as title_id, movie_info.info as plot from title, movie_info where title.id = movie_info.movie_id and movie_info.info_type_id = 98"/>
        </mapping>
        <mapping id="hasBudget">
            <CQ string="hasBudget(title($title_id),budget($budget))"/>
            <SQLQuery string="select title.id as title_id, movie_info.info as budget from title, movie_info where title.id = movie_info.movie_id and movie_info.info_type_id = 105"/>
        </mapping>
        <mapping id="hasLocation">
            <CQ string="hasLocation(title($title_id),location($location))"/>
            <SQLQuery string="select title.id as title_id, movie_info.info as location from title, movie_info where title.id = movie_info.movie_id and movie_info.info_type_id = 18"/>
        </mapping>
        <mapping id="hasGross">
            <CQ string="hasGross(title($title_id),gross($gross))"/>
            <SQLQuery string="select title.id as title_id, movie_info.info as gross from title, movie_info where title.id = movie_info.movie_id and movie_info.info_type_id = 107"/>
        </mapping>
        <mapping id="hasRentalRevenue">
            <CQ string="hasRentalRevenue(title($title_id),rental_revenue($rental))"/>
            <SQLQuery string="select title.id as title_id, movie_info.info as rental from title, movie_info where title.id = movie_info.movie_id and movie_info.info_type_id = 109"/>
        </mapping>
        <mapping id="hasActor">
            <CQ string="hasActor(title($movie_id),person($person_id))"/>
            <SQLQuery string="select person_id, movie_id from cast_info where role_id = 1 or role_id = 2"/>
        </mapping>
        <mapping id="hasDirector">
            <CQ string="hasDirector(title($movie_id),person($person_id))"/>
            <SQLQuery string="select person_id, movie_id from cast_info where role_id = 8"/>
        </mapping>
        <mapping id="hasEditor">
            <CQ string="hasEditor(title($movie_id),person($person_id))"/>
            <SQLQuery string="select person_id, movie_id from cast_info where role_id = 9"/>
        </mapping>
        <mapping id="hasWriter">
            <CQ string="hasWriter(title($movie_id),person($person_id))"/>
            <SQLQuery string="select person_id, movie_id from cast_info where role_id = 4"/>
        </mapping>
        <mapping id="hasProducer">
            <CQ string="hasProducer(title($movie_id),person($person_id))"/>
            <SQLQuery string="select person_id, movie_id from cast_info where role_id = 3"/>
        </mapping>
        <mapping id="hasDateOfBirth">
            <CQ string="hasDateOfBirth(person($person_id),dateofbirth($dob))"/>
            <SQLQuery string="select person_id, info as dob from person_info where info_type_id = 21"/>
        </mapping>
        <mapping id="ProductionCompany">
            <CQ string="ProductionCompany(company($id)), hasCompanyName(company($id),$name)"/>
            <SQLQuery string="select company_name.id as id, company_name.name as name, company_name.country_code as country from company_name, movie_companies where company_name.id = movie_companies.company_id and movie_companies.company_type_id = 2"/>
        </mapping>
        <mapping id="DistributionCompany">
            <CQ string="DistributionCompany(company($id)), hasCompanyName(company($id),$name)"/>
            <SQLQuery string="select company_name.id as id, company_name.name as name, company_name.country_code as country from company_name, movie_companies where company_name.id = movie_companies.company_id and movie_companies.company_type_id = 1"/>
        </mapping>
        <mapping id="hasProductionCompany">
            <CQ string="hasProductionCompany(title($title_id),company($company_id))"/>
            <SQLQuery string="select company_name.id as company_id, movie_companies.movie_id as title_id from company_name, movie_companies where company_name.id = movie_companies.company_id and movie_companies.company_type_id = 2"/>
        </mapping>
        <mapping id="hasDistributionCompany">
            <CQ string="hasDistributionCompany(title($title_id),company($company_id))"/>
            <SQLQuery string="select company_name.id as company_id, movie_companies.movie_id as title_id from company_name, movie_companies where company_name.id = movie_companies.company_id and movie_companies.company_type_id = 1"/>
        </mapping>
        <!-- FLOOR() function is not in SQL99 standard
        <mapping id="hasProductionDecade">
            <CQ string="hasProductionDecade(title($id),$decade)"/>
            <SQLQuery string="select id, floor(production_year/10)*10 as decade from title"/>
        </mapping>
        -->
        <mapping id="hasCountryCode">
            <CQ string="hasCountryCode(company($id),$country)"/>
            <SQLQuery string="select company_name.id as id, company_name.country_code as country from company_name"/>
        </mapping>
        <mapping id="hasName">
            <CQ string="hasName(person($id),$name)"/>
            <SQLQuery string="select name.id as id, name.name as name from name"/>
        </mapping>
    </mappings>
    <dataSource URI="kbdb_imdb" databaseDriver="oracle.jdbc.driver.OracleDriver"
        databaseName="obda.obdalin" databasePassword="imdbobda"
        databaseURL="jdbc:oracle:thin:@obdalin.inf.unibz.it:1522/"
        databaseUsername="imdbobda" isAboxDump="" name="kbdb_imdb" ontouri="http://www.owl-ontologies.com/Ontology1242910306.owl"/>
    <SavedQueries>
        <QueryGroup id="Test Queries">
            <Query id="SomeActress" text="SELECT $x WHERE { $x rdf:type &quot;Actress&quot;. $x :hasName &quot;Pfeiffer, Michelle&quot;  }"/>
            <Query id="SomeTVSeries" text="SELECT $x WHERE { $x rdf:type &quot;TVSeries&quot;. $x :hasTitle &quot;Deadwood&quot;  }"/>
            <Query id="SomeMovie" text="SELECT $x WHERE { $x rdf:type &quot;Movie&quot;. $x :hasTitle &quot;Smoke&quot;  }"/>
            <Query id="Some Actor" text="SELECT $x WHERE { $x rdf:type &quot;Actor&quot;. $x :hasName &quot;Aaker, Lee&quot;  }"/>
            <Query id="SomeWriter" text="SELECT $x WHERE { $x rdf:type &quot;Writer&quot;. $x :hasName &quot;Barker, Clive&quot;  }"/>
            <Query id="SomeProducer" text="SELECT $x WHERE { $x rdf:type &quot;Producer&quot;. $x :hasName &quot;Silver, Joel&quot;  }"/>
            <Query id="SomeDirector" text="SELECT $x WHERE { $x rdf:type &quot;Director&quot;. $x :hasName &quot;Tarantino, Quentin&quot;  }"/>
            <Query id="SomeEditor" text="SELECT $x WHERE { $x rdf:type &quot;Editor&quot;. $x :hasName &quot;Rawlings, Terry&quot;  }"/>
            <Query id="SomeMovieGenre" text="SELECT $x $y WHERE { $x rdf:type &quot;Movie&quot;. $x :hasTitle &quot;Smoke&quot;. $x :hasGenre $y }"/>
            <Query id="SomeTVSeriesGenre" text="SELECT $x $y WHERE { $x rdf:type &quot;TVSeries&quot;. $x :hasTitle &quot;Deadwood&quot;. $x :hasGenre $y }"/>
            <Query id="SomeTitleGenre" text="SELECT $x $y WHERE { $x rdf:type &quot;Title&quot;. $x :hasTitle &quot;Deadwood&quot;. $x :hasGenre $y }"/>
            <Query id="SomeMoviePlot" text="SELECT $x $y WHERE { $x rdf:type &quot;Movie&quot;. $x :hasTitle &quot;Smoke&quot;. $x :hasPlot $y }"/>
            <Query id="SomeTVSeriesPlot" text="SELECT $x $y WHERE { $x rdf:type &quot;TVSeries&quot;. $x :hasTitle &quot;Deadwood&quot;. $x :hasPlot $y }"/>
            <Query id="SomeTitlePlot" text="SELECT $x $y WHERE { $x rdf:type &quot;Title&quot;. $x :hasTitle &quot;Deadwood&quot;. $x :hasPlot $y }"/>
            <Query id="SomeMovieBudget" text="SELECT $x $y WHERE { $x rdf:type &quot;Movie&quot;. $x :hasTitle &quot;Smoke&quot;. $x :hasBudget $y }"/>
            <Query id="SomeTVSeriesBudget" text="SELECT $x $y WHERE { $x rdf:type &quot;TVSeries&quot;. $x :hasTitle &quot;Farscape&quot;. $x :hasBudget $y }"/>
            <Query id="SomeTitleBudget" text="SELECT $x $y WHERE { $x rdf:type &quot;Title&quot;. $x :hasTitle &quot;Firefly&quot;. $x :hasBudget $y }"/>
            <Query id="SomeMovieLocation" text="SELECT $x $y WHERE { $x rdf:type &quot;Movie&quot;. $x :hasTitle &quot;Smoke&quot;. $x :hasLocation $y }"/>
            <Query id="SomeTVSeriesLocation" text="SELECT $x $y WHERE { $x rdf:type &quot;TVSeries&quot;. $x :hasTitle &quot;Farscape&quot;. $x :hasLocation $y }"/>
            <Query id="SomeTitleLocation" text="SELECT $x $y WHERE { $x rdf:type &quot;Title&quot;. $x :hasTitle &quot;Firefly&quot;. $x :hasLocation $y }"/>
            <Query id="SomeTitleAllProperties" text="SELECT $x $y WHERE { $x rdf:type &quot;Title&quot;. $x :hasTitle &quot;Firefly&quot;. $x :hasProperty $y }"/>
            <Query id="SomeMovieGross" text="SELECT $x $y WHERE { $x rdf:type &quot;Movie&quot;. $x :hasTitle &quot;Smoke&quot;. $x :hasGross $y }"/>
            <Query id="SomeTVSeriesGross" text="SELECT $x $y WHERE { $x rdf:type &quot;TVSeries&quot;. $x :hasTitle &quot;Don Quijote&quot;. $x :hasGross $y }"/>
            <Query id="SomeTitleGross" text="SELECT $x $y WHERE { $x rdf:type &quot;Title&quot;. $x :hasTitle &quot;Jurassic Park&quot;. $x :hasGross $y }"/>
            <Query id="SomeMovieRentalRevenue" text="SELECT $x $y WHERE { $x rdf:type &quot;Movie&quot;. $x :hasTitle &quot;Toy Story&quot;. $x :hasRentalRevenue $y }"/>
            <Query id="SomeTitleRentalRevenue (only movie)" text="SELECT $x $x $y WHERE { $x rdf:type &quot;Title&quot;. $x :hasTitle &quot;The Addams Family&quot;. $x :hasRentalRevenue $y }"/>
            <Query id="SomeTVSeriesRentalRevenue (empty)" text="SELECT $x $x $y WHERE { $x rdf:type &quot;TVSeries&quot;. $x :hasTitle &quot;The Addams Family&quot;. $x :hasRentalRevenue $y }"/>
            <Query id="SomeMovieProdYear" text="SELECT $x $y WHERE { $x rdf:type &quot;Movie&quot;. $x :hasTitle &quot;Smoke&quot;. $x :hasProductionYear $y }"/>
            <Query id="SomeTVSeriesProdYear" text="SELECT $x $y WHERE { $x rdf:type &quot;TVSeries&quot;. $x :hasTitle &quot;The Wire&quot;. $x :hasProductionYear $y }"/>
            <Query id="SomeTitleProdYear" text="SELECT $x $x $y WHERE { $x rdf:type &quot;Title&quot;. $x :hasTitle &quot;The Addams Family&quot;. $x :hasProductionYear $y }"/>
            <Query id="SomeMovieActors" text="SELECT $x $z WHERE { $x rdf:type &quot;Title&quot;. $x :hasTitle &quot;Smoke&quot;. $x :hasActor $y. $y :hasName $z}"/>
            <Query id="SomeMovieActors (only Actresses)" text="SELECT $x $z WHERE { $x rdf:type &quot;Title&quot;. $x :hasTitle &quot;Smoke&quot;. $x :hasActor $y. $y rdf:type 'Actress'. $y :hasName $z}"/>
            <Query id="SomeMovieDirector" text="SELECT $x $z WHERE { $x rdf:type &quot;Movie&quot;. $x :hasTitle &quot;Smoke&quot;. $x :hasDirector $y. $y :hasName $z}"/>
            <Query id="SomeTVSeriesDirector" text="SELECT $x $z WHERE { $x rdf:type &quot;TVSeries&quot;. $x :hasTitle &quot;Dark Angel&quot;. $x :hasDirector $y. $y :hasName $z}"/>
            <Query id="SomeTitleDirector" text="SELECT $x $z WHERE { $x rdf:type &quot;Title&quot;. $x :hasTitle &quot;Smoke&quot;. $x :hasDirector $y. $y :hasName $z}"/>
            <Query id="SomeMovieEditor" text="SELECT $x $z WHERE { $x rdf:type &quot;Movie&quot;. $x :hasTitle &quot;Smoke&quot;. $x :hasEditor $y. $y :hasName $z}"/>
            <Query id="SomeTVSeriesEditor" text="SELECT $x $z WHERE { $x rdf:type &quot;TVSeries&quot;. $x :hasTitle &quot;The Wire&quot;. $x :hasEditor $y. $y :hasName $z}"/>
            <Query id="SomeTitleEditor" text="SELECT $x $z WHERE { $x rdf:type &quot;Title&quot;. $x :hasTitle &quot;The Addams Family&quot;. $x :hasEditor $y. $y :hasName $z }"/>
            <Query id="SomeMovieWriter" text="SELECT $x $z WHERE { $x rdf:type &quot;Movie&quot;. $x :hasTitle &quot;Smoke&quot;. $x :hasWriter $y. $y :hasName $z}"/>
            <Query id="SomeTVSeriesWriter" text="SELECT $x $z WHERE { $x rdf:type &quot;TVSeries&quot;. $x :hasTitle &quot;The Wire&quot;. $x :hasWriter $y. $y :hasName $z}"/>
            <Query id="SomeTitleWriter" text="SELECT $x $z WHERE { $x rdf:type &quot;Title&quot;. $x :hasTitle &quot;The Addams Family&quot;. $x :hasWriter $y. $y :hasName $z }"/>
            <Query id="SomeMovieProducer" text="SELECT $x $z WHERE { $x rdf:type &quot;Movie&quot;. $x :hasTitle &quot;Smoke&quot;. $x :hasProducer $y. $y :hasName $z}"/>
            <Query id="SomeTVSeriesProducer" text="SELECT $x $z WHERE { $x rdf:type &quot;TVSeries&quot;. $x :hasTitle &quot;The Wire&quot;. $x :hasProducer $y. $y :hasName $z}"/>
            <Query id="SomeTitleProducer" text="SELECT $x $z WHERE { $x rdf:type &quot;Title&quot;. $x :hasTitle &quot;The Addams Family&quot;. $x :hasProducer $y. $y :hasName $z }"/>
            <Query id="SomeMovieProductionCompanies" text="SELECT $x $z WHERE { $x rdf:type &quot;Movie&quot;. $x :hasTitle &quot;Smoke&quot;. $x :hasProductionCompany $y. $y :hasCompanyName $z}"/>
            <Query id="SomeTVSeriesProductionCompanies" text="SELECT $x $z WHERE { $x rdf:type &quot;TVSeries&quot;. $x :hasTitle &quot;Deadwood&quot;. $x :hasProductionCompany $y. $y :hasCompanyName $z}"/>
            <Query id="SomeTitleProductionCompanies" text="SELECT $x $z WHERE { $x rdf:type &quot;Title&quot;. $x :hasTitle &quot;Deadwood&quot;. $x :hasProductionCompany $y. $y :hasCompanyName $z}"/>
            <Query id="SomeMovieDistribCompanies" text="SELECT $x $z WHERE { $x rdf:type &quot;Movie&quot;. $x :hasTitle &quot;Smoke&quot;. $x :hasDistributionCompany $y. $y :hasCompanyName $z}"/>
            <Query id="SomeTVSeriesDistribCompanies" text="SELECT $x $z WHERE { $x rdf:type &quot;TVSeries&quot;. $x :hasTitle &quot;Deadwood&quot;. $x :hasDistributionCompany $y. $y :hasCompanyName $z}"/>
            <Query id="SomeTitleDistribCompanies" text="SELECT $x $z WHERE { $x rdf:type &quot;Title&quot;. $x :hasTitle &quot;Deadwood&quot;. $x :hasDistributionCompany $y. $y :hasCompanyName $z}"/>
            <Query id="SomeMovieDecade" text="SELECT $x $y WHERE { $x rdf:type &quot;Movie&quot;. $x :hasTitle &quot;Smoke&quot;. $x :hasProductionDecade $y }"/>
            <Query id="SomeTVSeriesDecade" text="SELECT $x $y WHERE { $x rdf:type &quot;TVSeries&quot;. $x :hasTitle &quot;Deadwood&quot;. $x :hasProductionDecade $y }"/>
            <Query id="SomeTitleDecade" text="SELECT $x $y WHERE { $x rdf:type &quot;Title&quot;. $x :hasTitle &quot;Deadwood&quot;. $x :hasProductionDecade $y }"/>
        </QueryGroup>
        <QueryGroup id="Required Queries">
            <Query id="Q1: All information about movie X" text="SELECT $x $y WHERE { $x rdf:type &quot;Movie&quot;. $x :hasTitle &quot;Smoke&quot;. $x :hasProperty $y } ORDER BY DESC($x &amp;&amp; $y)"/>
            <Query id="Q2: All cast members of Movie X" text="SELECT $x $y WHERE { $x rdf:type &quot;Movie&quot;. $x :hasTitle &quot;Smoke&quot;. $x :hasCastMember $y } ORDER BY DESC($x &amp;&amp; $y)"/>
            <Query id="Q3: Date of Birth of Actor X" text="SELECT $y WHERE { $x rdf:type &quot;Performer&quot;. $x :hasName &quot;Lee, Bruce&quot;. $x :hasDateOfBirth $y }"/>
            <Query id="Q4: Plot for Movie X" text="SELECT $y WHERE { $x rdf:type &quot;Movie&quot;. $x :hasTitle &quot;Smoke&quot;. $x :hasPlot $y }"/>
            <Query id="Q5: Drama TVSeries produced in year X" text="SELECT $x $y WHERE { $x rdf:type &quot;TVSeries&quot;; :hasTitle $y; :hasGenre &quot;genre(Drama)&quot;; :hasProductionYear 2001 }"/>
            <Query
                id="Q6: Comedies from the 90s produced by the Chinese" text="SELECT $x $y WHERE { $x rdf:type &quot;Title&quot;; :hasTitle $y; :hasGenre &quot;genre(Comedy)&quot;; :hasProductionDecade 1990; :hasProductionCompany $w. $w :hasCompanyName $z; :hasCountryCode &quot;[cn]&quot;}"/>
            <Query id="Q7: Movies from 50s, 60s, 70s, 80s, 90s, 00s" text="SELECT $x $y WHERE { &#xa;&#x9;{$x rdf:type &quot;Movie&quot;; :hasTitle $y; :hasProductionDecade 1950 }&#xa;&#x9;{$x rdf:type &quot;Movie&quot;; :hasTitle $y; :hasProductionDecade 1960 }&#xa;&#x9;{$x rdf:type &quot;Movie&quot;; :hasTitle $y; :hasProductionDecade 1970 }&#xa;&#x9;{$x rdf:type &quot;Movie&quot;; :hasTitle $y; :hasProductionDecade 1980 }&#xa;&#x9;{$x rdf:type &quot;Movie&quot;; :hasTitle $y; :hasProductionDecade 1990 }&#xa;&#x9;{$x rdf:type &quot;Movie&quot;; :hasTitle $y; :hasProductionDecade 2000 }&#xa;}"/>
            <Query
                id="Q8: All actors from movies in the 60s who participated in movies from the 80s" text="SELECT $x WHERE {&#xa;&#x9;$x rdf:type &quot;Performer&quot;.&#xa;&#x9;$y rdf:type &quot;Movie&quot;; :hasProductionDecade 1960; :hasActor $x.&#xa;&#x9;$z rdf:type &quot;Movie&quot;; :hasProductionDecade 1980; :hasCastMember $x&#xa;}"/>
        </QueryGroup>
        <QueryGroup id="WorkSpace">
            <Query id="AllComediesProducedByChinese" text="SELECT $x $y $w $z WHERE { $x rdf:type &quot;Title&quot;; :hasTitle $y; :hasGenre &quot;genre(Comedy)&quot;; :hasProductionCompany $w. $w :hasCompanyName $z; :hasCountryCode &quot;[cn]&quot;}"/>
        </QueryGroup>
        <QueryGroup id="Own Queries">
            <Query id="Q1: Movies produced in US and Japan" text="SELECT $movie { $m1 rdf:type &quot;Movie&quot;; :hasTitle $movie; :hasProductionCompany $pc1; :hasProductionCompany $pc2. $pc1 :hasCountryCode '[jp]'. $pc2 :hasCountryCode '[us]' }"/>
            <Query
                id="Q2: producers that worked on movies produced by Japanaese companies and on movies produced by South African companies" text="SELECT $person { $m1 rdf:type &quot;Movie&quot;; :hasProductionCompany $pc1; :hasProducer $prod. $pc1 :hasCountryCode '[jp]'. $m2 rdf:type &quot;Movie&quot;; :hasProductionCompany $pc2; :hasProducer $prod. $pc2 :hasCountryCode '[za]'. $prod :hasName $person }"/>
            <Query
                id="Q3: Titles (and people properties) directed by actors of Smoke" text="SELECT $pname $tid $ttitle $tplot WHERE { $w rdf:type &quot;Movie&quot;; :hasTitle &quot;Smoke&quot;; :hasActor $z. $z :hasName $pname. $tid rdf:type &quot;Title&quot;; :hasDirector $z; :hasTitle $ttitle; :hasPlot $tplot}"/>
            <Query
                id="Q4: Name of person and movie where the director is also an actor" text="SELECT $title $person WHERE { $x rdf:type &quot;Movie&quot;; :hasTitle $title; :hasActor $z; :hasDirector $z. $z :hasName $person }"/>
            <Query id="Q5: Incomplete info: movie without plot" text="SELECT $x WHERE { $x rdf:type &quot;Movie&quot;. $x :hasTitle &quot;The 11th Hour&quot;. $x :hasPlot $y }"/>
            <Query
                id="Q6: Incomplete info: movie (and plot) without plot" text="SELECT $x $y WHERE { $x rdf:type &quot;Movie&quot;. $x :hasTitle &quot;The 11th Hour&quot;. $x :hasPlot $y }"/>
        </QueryGroup>
    </SavedQueries>
</OBDA>
