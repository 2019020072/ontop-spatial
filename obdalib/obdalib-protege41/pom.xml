<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<artifactId>obdalib-parent</artifactId>
		<groupId>inf.unibz.it.obda</groupId>
		<version>1.8</version>
		<relativePath>..</relativePath>
	</parent>
	<artifactId>obdalib-protege41</artifactId>
	<name>obdalib-protege41</name>

	<repositories>
		<!--
			This repository holds protege 4 and obdalib related dependencies, the
			machine will change soon to obdavm instead of obdalin
		-->
		<repository>
			<id>obda.inf.unibz.it</id>
			<name>FUB OBDA Maven repository</name>
			<url>http://obdavm.inf.unibz.it:8080/nexus/content/groups/public</url>
			<layout>default</layout>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<releases>
				<enabled>true</enabled>
			</releases>
		</repository>
		<repository>
			<id>thirdparty-releases</id>
			<name>JBoss Thirdparty Releases</name>
			<url>https://repository.jboss.org/nexus/content/repositories/thirdparty-releases</url>
		</repository>
	</repositories>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- OBDA libraries -->

		<!-- These are dependencies to the OBDA related classes. -->

		<dependency>
			<groupId>inf.unibz.it.obda</groupId>
			<artifactId>obdalib-core</artifactId>
			<version>1.8</version>
		</dependency>
		<dependency>
			<groupId>inf.unibz.it.obda</groupId>
			<artifactId>obdalib-owlapi3</artifactId>
			<version>1.8</version>
		</dependency>

		<!--Dependencies from the OBDA projects to include in the jar -->

		<!-- Reasoner libraries -->

		<dependency>
			<groupId>inf.unibz.it.obda</groupId>
			<artifactId>reformulation-core</artifactId>
			<version>1.8</version>
		</dependency>
		<dependency>
			<groupId>inf.unibz.it.obda</groupId>
			<artifactId>quest-owlapi3</artifactId>
			<version>1.8</version>
		</dependency>
		<dependency>
			<groupId>inf.unibz.it.obda</groupId>
			<artifactId>quest-db</artifactId>
			<version>1.8</version>
		</dependency>
		<dependency>
			<groupId>inf.unibz.it.obda</groupId>
			<artifactId>quest-sesame</artifactId>
			<version>1.8</version>
		</dependency>

		<!--
			All the following dependencies are required at compilation or runtime
			and are not available in the OSGi, or Protege 4 classpath. They must
			be packed together with the bundle. They have a default scope of
			runtime and compilation
		-->

		<dependency>
			<groupId>org.jgraph</groupId>
			<artifactId>jgrapht</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jgraph</groupId>
			<artifactId>jgraph</artifactId>
		</dependency>
		<dependency>
			<groupId>org.antlr</groupId>
			<artifactId>antlr</artifactId>
		</dependency>
		<dependency>
			<groupId>org.antlr</groupId>
			<artifactId>antlr-runtime</artifactId>
		</dependency>
		<dependency>
			<groupId>com.hp.hpl.jena</groupId>
			<artifactId>jena</artifactId>
		</dependency>
		<dependency>
			<groupId>com.hp.hpl.jena</groupId>
			<artifactId>iri</artifactId>
		</dependency>
		<dependency>
			<groupId>com.hp.hpl.jena</groupId>
			<artifactId>arq</artifactId>
		</dependency>
		<dependency>
			<groupId>com.hp.hpl.jena</groupId>
			<artifactId>json-jena</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>tomcat-jdbc</artifactId>
			<version>7.0.37</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>juli</artifactId>
			<version>6.0.29</version>
		</dependency>
		<dependency>
			<groupId>com.ibm.icu</groupId>
			<artifactId>icu4j</artifactId>
		</dependency>
		<dependency>
			<groupId>activemq</groupId>
			<artifactId>relaxngDatatype</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
		</dependency>
		<dependency>
			<groupId>xsdlib</groupId>
			<artifactId>xsdlib</artifactId>
		</dependency>
		<dependency>
			<groupId>xerces</groupId>
			<artifactId>xercesImpl</artifactId>
		</dependency>

		<dependency>
			<groupId>org.openrdf.sesame</groupId>
			<artifactId>sesame-runtime</artifactId>
		</dependency>

		<!-- These will download some of the sources -->
		
		<dependency>
			<groupId>org.openrdf.sesame</groupId>
			<artifactId>sesame-repository-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.openrdf.sesame</groupId>
			<artifactId>sesame-queryresultio-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.openrdf.sesame</groupId>
			<artifactId>sesame-queryresultio-sparqlxml</artifactId>
			<version>2.6.9</version>
		</dependency>
		<dependency>
			<groupId>org.openrdf.sesame</groupId>
			<artifactId>sesame-query</artifactId>
			<version>2.6.9</version>
		</dependency>
		<dependency>
			<groupId>org.openrdf.sesame</groupId>
			<artifactId>sesame-queryparser-api</artifactId>
			<version>2.6.9</version>
		</dependency>
		<dependency>
			<groupId>org.openrdf.sesame</groupId>
			<artifactId>sesame-queryalgebra-evaluation</artifactId>
			<version>2.6.9</version>
		</dependency>
		<dependency>
			<groupId>org.openrdf.sesame</groupId>
			<artifactId>sesame-queryalgebra-model</artifactId>
			<version>2.6.9</version>
		</dependency>
		<dependency>
			<groupId>org.openrdf.sesame</groupId>
			<artifactId>sesame-repository-sparql</artifactId>
			<version>2.6.9</version>
		</dependency>
		<dependency>
			<groupId>org.openrdf.sesame</groupId>
			<artifactId>sesame-queryresultio-text</artifactId>
		</dependency>
		<dependency>
			<groupId>org.openrdf.sesame</groupId>
			<artifactId>sesame-model</artifactId>
			<version>2.6.9</version>
		</dependency>
		<dependency>
			<groupId>org.openrdf.sesame</groupId>
			<artifactId>sesame-rio-api</artifactId>
			<version>2.6.9</version>
		</dependency>
		<dependency>
			<groupId>org.openrdf.sesame</groupId>
			<artifactId>sesame-rio-turtle</artifactId>
			<version>2.6.9</version>
		</dependency>
		<dependency>
			<groupId>org.openrdf.sesame</groupId>
			<artifactId>sesame-rio-rdfxml</artifactId>
			<version>2.6.9</version>
		</dependency>
		<dependency>
			<groupId>org.openrdf.sesame</groupId>
			<artifactId>sesame-rio-n3</artifactId>
			<version>2.6.9</version>
		</dependency>
		<dependency>
			<groupId>org.openrdf.sesame</groupId>
			<artifactId>sesame-util</artifactId>
			<version>2.6.9</version>
		</dependency>
		<dependency>
			<groupId>info.aduna</groupId>
			<artifactId>aduna-io</artifactId>
			<version>1.3</version>
		</dependency>
		<dependency>
			<groupId>info.aduna</groupId>
			<artifactId>aduna-iteration</artifactId>
			<version>1.5</version>
		</dependency>
		<dependency>
			<groupId>info.aduna</groupId>
			<artifactId>aduna-concurrent</artifactId>
			<version>1.4</version>
		</dependency>
		<dependency>
			<groupId>info.aduna.commons</groupId>
			<artifactId>aduna-commons-lang</artifactId>
			<version>2.6.0</version>
		</dependency>
		<dependency>
			<groupId>info.aduna.commons</groupId>
			<artifactId>aduna-commons-net</artifactId>
			<version>2.2</version>
		</dependency>
		<dependency>
			<groupId>info.aduna.commons</groupId>
			<artifactId>aduna-commons-text</artifactId>
			<version>2.2</version>
		</dependency>
		<dependency>
			<groupId>info.aduna.commons</groupId>
			<artifactId>aduna-commons-xml</artifactId>
			<version>2.2</version>
		</dependency>

		<!-- JDBC Drivers -->

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
		</dependency>
		<dependency>
			<groupId>postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<type>jar</type>
		</dependency>

		<!-- Protege 4 and OWLAPI bundle dependencies -->

		<dependency>
			<groupId>org.protege</groupId>
			<artifactId>org.protege.editor.core.application</artifactId>
			<version>4.1.0-b239</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.protege</groupId>
			<artifactId>org.protege.editor.owl</artifactId>
			<version>4.1.0-b239</version>
			<classifier>jar</classifier>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.semanticweb</groupId>
			<artifactId>org.semanticweb.owl.owlapi</artifactId>
			<version>4.1.0-b239</version>
			<classifier>jar</classifier>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>log4j-over-slf4j</artifactId>
		</dependency>
	</dependencies>

	<build>
		<finalName>it.unibz.inf.obda.p4plugin-1.8</finalName>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
					<excludes>
						<exclude>*it/unibz/krdb/obda/owlrefplatform/core/reformulation/TreeWitness*</exclude>
						<exclude>**/TW*.java</exclude>
						<exclude>**/LUBM*.java</exclude>
						<exclude>**/directmapping/*.java</exclude>
						<exclude>**/views/QueryHistoryView.java</exclude>
						<exclude>**/views/RDBMSInspectorView.java</exclude>
					</excludes>
					<testExcludes>
						<exclude>**/MappingToRuleTester.java</exclude>
						<exclude>**/PartialEvaluationTest.java</exclude>
					</testExcludes>
				</configuration>
			</plugin>

			<!--
				<plugin> <artifactId>maven-jar-plugin</artifactId> <configuration>
				<archive>
				<manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
				</archive> </configuration> </plugin>
			-->
			<plugin>
				<!--
					This is the main plugin to build the bundle. Informattion about
					this plugin can be found here:
					http://felix.apache.org/site/apache-felix-maven-bundle-plugin-bnd.html
					Note the inline comments
				-->

				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>

				<!--
					<executions> <execution> <id>bundle-manifest</id>
					<phase>process-classes</phase> <goals> <goal>manifest</goal>
					</goals> </execution> </executions>
				-->

				<!-- <version>2.3.4</version> -->
				<extensions>true</extensions>
				<configuration>

					<!--
						The follwing is the set of instructions of how pack the bundle and
						how to create the MANIFEST.MF for the bundle. The configuration
						does 4 things. 1. It makes sure that the "tight" dependencies are
						not packed as jars, but as .class files (inline). It makes sure
						that all the runtime dependencies are packed as jars. 2. It makes
						sure all the protege plugin resources are packed (plugin.xml,
						tabs*.xml, etc). 3. It makes sure the META-INF/MANIFEST.MF for
						OSGi bundles is created with the correct imports, exports and
						classpath.
					-->

					<instructions>

						<!-- <Build-Jdk>1.6</Build-Jdk> -->
						<Bundle-RequiredExecutionEnvironment>JavaSE-1.6</Bundle-RequiredExecutionEnvironment>
						<!--
							This makes sure any dependency in the obdalib <dependency>
							dependencies are packed as .classes (uncompressed, no jars) and
							the rest is packed as .jars
						-->
						<!--
							<Embed-Dependency>*;groupId=inf.unibz.it.obda;inline=true,obdalib*;groupId=inf.unibz.it*;inline=true,*;groupId=!it.unibz.krdb;scope=compile|runtime</Embed-Dependency>
						-->
						<Embed-Dependency>*;groupId=inf.unibz.it.obda.*;inline=true,*;groupId=it.unibz.krdb.obda.protege4.*;inline=true,*;groupId=!inf.unibz.it.obda;scope=compile|runtime</Embed-Dependency>

						<Bundle-Name>-ontopPro-</Bundle-Name>
						<!-- necessary for protege 4 plugins -->
						<Bundle-Category>protege</Bundle-Category>

						<!-- general information -->
						<Bundle-ContactAddress>rodriguez@inf.unibz.it</Bundle-ContactAddress>
						<Bundle-DocURL>http://ontop.inf.unibz.it</Bundle-DocURL>
						<Bundle-Description>-ontopPro- Protege 4</Bundle-Description>
						<Bundle-Vendor>Free University of Bozen-Bolzano. KRDB Research
							Centre</Bundle-Vendor>
						<Implementation-Version>${project.version}.b2039</Implementation-Version>

						<!-- Required. Remember to use the proper version for dependencies -->
						<Bundle-Version>1.8</Bundle-Version>
						<Build-Number>2157</Build-Number>
						<!--
							<Private-Package>!osgi.wiring.package, !org.w3c.dom.ranges,
							!org.w3c.dom.traversal*</Private-Package>
						-->
						<Export-Package>it.unibz.krdb.obda.protege4.*</Export-Package>
						<Import-Package>it.unibz.krdb.obda.protege4.*,!org.json,
							javax.xml.datatype, javax.swing.*,
							javax.accessibility,
							javax.naming.*,javax.management.*,javax.sql.*,
							javax.xml.parsers.*,org.xml.sax.*,
							it.unibz.krdb.obda.*,
							org.protege.osgi.jdbc, org.protege.osgi.*,
							uk.ac.manchester.*,
							org.protege.*,
							org.semanticweb.*,
							com.hp.hpl.jena.query.*,
							org.apache.tomcat.*,
							org.openrdf.sesame.*,
							org.openrdf.query*,
							org.openrdf.query.parser*,
							org.openrdf.query.algebra*,
							org.openrdf.query.resultio.*,
							org.openrdf.rio.n3*,
							info.aduna.*,
							info.aduna.commons.*,
							!au.com.bytecode.opencsv*,
							!com.touchgraph*,
							!org.codehaus.janino, org.codehaus.*
							!org.w3c.dom*,
							!org.xml.*,!sun.*,!jena.*, !junit.*, !org.antl*,
							!org.apache*,
							!org.ietf.*, !javax.*, !com.hp.*,
							!arq*, !antlr*,
							!EDU.oswego.cs.dl.util.concurrent,
							!osgi.wiring.package,
							!org.w3c.dom.ranges,!org.w3c.dom.traversal, *</Import-Package>
						<Eclipse-LazyStart>false</Eclipse-LazyStart>

						<!--
							The name of the plugin for OSGi dependencies. It has to be
							singleton or protege wont load it
						-->
						<Bundle-SymbolicName>it.unibz.krdb.obda.protege4;singleton:=true</Bundle-SymbolicName>

						<!--
							This makes sure ONLY the necessary dependencies are imported. If
							this is not supplied, maven-bundle-plugin will attempt to import
							ALL classes in the dependencies (even transitive ones) This will
							lead to class not found exceptions. It's very important to assure
							only the needed depdencies are imported.
						-->
						<!--
							<Import-Package>com.ibm.db2.jcc.licenses.*,com.hp.hpl.jena.iri.*,org.apache.commons.logging.*,com.hp.hpl.jena.query.*,org.apache.log4j.*,org.atlr.*,org.slf4j.*,org.protege.*,org.coode.*,org.semanticweb.*,uk.ac.manchester.*,!*,org.protege.osgi.jdbc</Import-Package>
						-->
						<!--
							<Import-Package>!osgi.wiring.package,!org.w3c.dom.ranges,javax.accessibility.*,org.apache.log4j,javax.swing.*,org.apache.commons.logging.*,org.apache.log4j.*,org.atlr.*,org.slf4j.*,org.protege.*,org.coode.*,org.semanticweb.*,uk.ac.manchester.*,org.protege.osgi.jdbc,org.xml.sax*,javax.xml*,javax.xml.parsers*,javax.naming*,ch.qos.logback.classic*,com.hp.hpl.jena.iri*,com.hp.hpl.jena.query*,!*</Import-Package>
						-->

						<!--
							This makes sure all OBDA classes are exported and available in
							dependent projects
						-->
						<!-- <Export-Package>it.unibz.krdb.*</Export-Package> -->

						<!--
							Not needed anymore, it was necessary when we were not using
							import-package
							<Require-Bundle>org.eclipse.equinox.registry,org.eclipse.equinox.common,org.protege.common,org.protege.editor.core.application,org.protege.editor.owl,org.semanticweb.owl.owlapi</Require-Bundle>
						-->
					</instructions>
				</configuration>
			</plugin>

			<!--
				<plugin> <groupId>org.codehaus.mojo</groupId>
				<artifactId>buildnumber-maven-plugin</artifactId> <executions>
				<execution> <phase>validate</phase> <goals> <goal>create</goal>
				</goals> </execution> </executions> </plugin>
			-->

			<!--
				<plugin> <groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId> <configuration>
				<skip>false</skip> </configuration> </plugin>
			-->

		</plugins>
	</build>
	<url>http://ontop.inf.unibz.it/</url>
	<description>The -ontop- plugin for Protege</description>
	<organization>
		<name>KRDB Research Centre. Free University of Bozen Bolzano.</name>
		<url>http://www.inf.unibz.it/krdb/</url>
	</organization>
</project>